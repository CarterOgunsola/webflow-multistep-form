{"version":3,"file":"webflow-multistep-form.umd.js","sources":["../src/core/stepManager.js","../src/core/formMemory.js","../src/core/QueryParams.js","../src/core/validator.js","../src/core/WebflowMultiStepForm.js","../src/core/index.js"],"sourcesContent":["class StepManager {\n  constructor(form) {\n    this.form = form;\n    this.steps = Array.from(this.form.querySelectorAll(\"[data-form-step]\"));\n    this.currentStepIndex = 0;\n    this.totalSteps = this.steps.length;\n\n    // Optional: Select progress indicators if they exist\n    this.progressIndicators = Array.from(\n      this.form.querySelectorAll('[data-form=\"progress-indicator\"]')\n    );\n    this.customProgressIndicators = Array.from(\n      this.form.querySelectorAll('[data-form=\"custom-progress-indicator\"]')\n    );\n  }\n\n  // Getters for current state\n  getCurrentStep() {\n    return this.steps[this.currentStepIndex];\n  }\n\n  getCurrentStepIndex() {\n    return this.currentStepIndex;\n  }\n\n  getTotalSteps() {\n    return this.totalSteps;\n  }\n\n  // Navigate to a specific step\n  goToStep(index) {\n    if (index >= 0 && index < this.totalSteps) {\n      this.currentStepIndex = index;\n      this.updateStepStates();\n      this.updateProgressIndicators();\n      return true;\n    }\n    return false;\n  }\n\n  // Navigate forward\n  next() {\n    return this.goToStep(this.currentStepIndex + 1);\n  }\n\n  // Navigate backward\n  previous() {\n    return this.goToStep(this.currentStepIndex - 1);\n  }\n\n  // Update visual state of steps\n  updateStepStates() {\n    this.steps.forEach((step, index) => {\n      step.removeAttribute(\"data-form-step-active\");\n      step.removeAttribute(\"data-form-step-completed\");\n      step.removeAttribute(\"data-form-step-upcoming\");\n\n      if (index === this.currentStepIndex) {\n        step.setAttribute(\"data-form-step-active\", \"\");\n        step.style.display = \"block\";\n      } else if (index < this.currentStepIndex) {\n        step.setAttribute(\"data-form-step-completed\", \"\");\n        step.style.display = \"none\";\n      } else {\n        step.setAttribute(\"data-form-step-upcoming\", \"\");\n        step.style.display = \"none\";\n      }\n    });\n\n    // Update progress indicators\n    this.updateProgressIndicators();\n\n    this.form.dispatchEvent(\n      new CustomEvent(\"stepChange\", {\n        detail: {\n          currentStep: this.currentStepIndex,\n          totalSteps: this.totalSteps,\n          isFirstStep: !this.hasPrevious(),\n          isLastStep: !this.hasNext(),\n        },\n      })\n    );\n  }\n\n  // Update progress indicators\n  updateProgressIndicators() {\n    // Default progress indicators\n    this.progressIndicators.forEach((indicator, index) => {\n      indicator.classList.remove(\"current\", \"completed\");\n      if (index < this.currentStepIndex) {\n        indicator.classList.add(\"completed\");\n      } else if (index === this.currentStepIndex) {\n        indicator.classList.add(\"current\");\n      }\n    });\n\n    // Custom progress indicators\n    this.customProgressIndicators.forEach((indicator, index) => {\n      indicator.classList.remove(\"current\", \"completed\");\n      if (index < this.currentStepIndex) {\n        indicator.classList.add(\"completed\");\n      } else if (index === this.currentStepIndex) {\n        indicator.classList.add(\"current\");\n      }\n    });\n  }\n\n  // Determine navigation possibilities\n  hasNext() {\n    return this.currentStepIndex < this.totalSteps - 1;\n  }\n\n  hasPrevious() {\n    return this.currentStepIndex > 0;\n  }\n}\n\nexport default StepManager;\n","// src/core/FormMemory.js\nclass FormMemory {\n  constructor(form) {\n    this.form = form;\n    this.formId = this.form.id;\n    this.storageKey = `wf-form-${this.formId}`;\n    this.autoSaveInterval = null;\n\n    this.handleInput = this.handleInput.bind(this);\n    this.saveProgress = this.saveProgress.bind(this);\n    this.restoreProgress = this.restoreProgress.bind(this);\n  }\n\n  init() {\n    this.form.addEventListener(\"input\", this.handleInput);\n    this.restoreProgress();\n    this.autoSaveInterval = setInterval(this.saveProgress, 30000);\n    window.addEventListener(\"beforeunload\", () => {\n      this.saveProgress();\n    });\n  }\n\n  handleInput(event) {\n    if (event.target.type === \"password\") return;\n\n    if (this.saveTimeout) clearTimeout(this.saveTimeout);\n    this.saveTimeout = setTimeout(() => this.saveProgress(), 1000);\n  }\n\n  saveProgress() {\n    const formData = {};\n    const fields = this.form.querySelectorAll(\"input, select, textarea\");\n\n    fields.forEach((field) => {\n      if (field.type === \"submit\" || field.type === \"password\") return;\n\n      switch (field.type) {\n        case \"checkbox\":\n        case \"radio\":\n          if (field.checked) {\n            formData[field.name] = field.value;\n          }\n          break;\n        case \"file\":\n          break;\n        default:\n          if (field.value) {\n            formData[field.name] = field.value;\n          }\n      }\n    });\n\n    try {\n      localStorage.setItem(\n        this.storageKey,\n        JSON.stringify({\n          timestamp: Date.now(),\n          data: formData,\n          currentStep: this.form.getAttribute(\"data-form-step-index\") || 0,\n        })\n      );\n\n      this.form.dispatchEvent(new CustomEvent(\"formProgressSaved\"));\n    } catch (error) {\n      console.warn(\"Failed to save form progress:\", error);\n    }\n  }\n\n  restoreProgress() {\n    try {\n      const saved = localStorage.getItem(this.storageKey);\n      if (!saved) return false;\n\n      const { data, timestamp, currentStep } = JSON.parse(saved);\n\n      const MAX_AGE = 24 * 60 * 60 * 1000;\n      if (Date.now() - timestamp > MAX_AGE) {\n        this.clearSavedProgress();\n        return false;\n      }\n\n      Object.entries(data).forEach(([name, value]) => {\n        const fields = this.form.querySelectorAll(`[name=\"${name}\"]`);\n        fields.forEach((field) => {\n          switch (field.type) {\n            case \"checkbox\":\n            case \"radio\":\n              field.checked = field.value === value;\n              break;\n            default:\n              field.value = value;\n          }\n        });\n      });\n\n      if (currentStep) {\n        this.form.dispatchEvent(\n          new CustomEvent(\"restoreStep\", {\n            detail: { step: parseInt(currentStep, 10) },\n          })\n        );\n      }\n\n      this.form.dispatchEvent(\n        new CustomEvent(\"formProgressRestored\", {\n          detail: { timestamp },\n        })\n      );\n\n      return true;\n    } catch (error) {\n      console.warn(\"Failed to restore form progress:\", error);\n      return false;\n    }\n  }\n\n  clearSavedProgress() {\n    try {\n      localStorage.removeItem(this.storageKey);\n      return true;\n    } catch (error) {\n      console.warn(\"Failed to clear form progress:\", error);\n      return false;\n    }\n  }\n\n  destroy() {\n    if (this.autoSaveInterval) {\n      clearInterval(this.autoSaveInterval);\n    }\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n    this.form.removeEventListener(\"input\", this.handleInput);\n  }\n}\n\nexport default FormMemory;\n","// src/core/QueryParams.js\nclass QueryParams {\n  constructor(form) {\n    this.form = form;\n  }\n\n  init() {\n    // Check for data-form-prefill attribute\n    if (this.form.hasAttribute(\"data-form-prefill\")) {\n      this.prefillFromQueryParams();\n    }\n\n    // Check for specific step in URL\n    const stepParam = this.getQueryParam(\"step\");\n    if (stepParam) {\n      this.form.dispatchEvent(\n        new CustomEvent(\"goToStep\", {\n          detail: { step: parseInt(stepParam, 10) - 1 },\n        })\n      );\n    }\n  }\n\n  getQueryParam(param) {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get(param);\n  }\n\n  prefillFromQueryParams() {\n    const fields = this.form.querySelectorAll(\"[data-param]\");\n\n    fields.forEach((field) => {\n      const paramName = field.getAttribute(\"data-param\");\n      const paramValue = this.getQueryParam(paramName);\n\n      if (paramValue) {\n        switch (field.type) {\n          case \"checkbox\":\n            field.checked = paramValue.toLowerCase() === \"true\";\n            break;\n          case \"radio\":\n            if (field.value === paramValue) {\n              field.checked = true;\n            }\n            break;\n          default:\n            field.value = paramValue;\n        }\n\n        // Dispatch change event to trigger any dependent logic\n        field.dispatchEvent(new Event(\"change\", { bubbles: true }));\n      }\n    });\n  }\n}\n\nexport default QueryParams;\n","// src/core/Validator.js\nclass Validator {\n  constructor(form) {\n    this.form = form;\n    this.validationRules = new Map();\n    this.customValidators = new Map();\n    this.locale = document.documentElement.lang || \"en\";\n    this.messages = {\n      required: \"This field is required\",\n      email: \"Please check your email address\",\n      phone: \"Please check your phone number\",\n      minLength: (length) => `Minimum ${length} characters`,\n      maxLength: (length) => `Maximum ${length} characters`,\n      pattern: \"Please check the format\",\n      number: \"Please enter a valid number\",\n      date: \"Please enter a valid date\",\n      fileSize: \"File is too large\",\n      fileType: \"File type not allowed\",\n    };\n\n    // Setup default validators\n    this.setupDefaultValidators();\n  }\n\n  setupDefaultValidators() {\n    // Required field - accepts any non-whitespace including Unicode\n    this.customValidators.set(\"required\", (value) => ({\n      valid: String(value).trim().length > 0,\n      message: this.messages.required,\n    }));\n\n    // Email - Unicode support + TLD optional\n    this.customValidators.set(\"email\", (value) => ({\n      valid: value.length === 0 || this.validateEmail(value),\n      message: this.messages.email,\n    }));\n\n    // Phone - International format support\n    this.customValidators.set(\"phone\", (value) => ({\n      valid: value.length === 0 || this.validatePhone(value),\n      message: this.messages.phone,\n    }));\n\n    // Length validation with Unicode support\n    this.customValidators.set(\"minLength\", (value, length) => ({\n      valid: [...String(value)].length >= Number(length),\n      message: this.messages.minLength(length),\n    }));\n\n    this.customValidators.set(\"maxLength\", (value, length) => ({\n      valid: [...String(value)].length <= Number(length),\n      message: this.messages.maxLength(length),\n    }));\n\n    // Number validation with localization\n    this.customValidators.set(\"number\", (value, params = \"\") => {\n      if (value.length === 0) return { valid: true };\n\n      // Handle different number formats\n      const [min, max] = params\n        .split(\",\")\n        .map((p) => (p ? parseFloat(p) : null));\n      const normalizedValue = this.normalizeNumber(value);\n\n      if (isNaN(normalizedValue)) {\n        return { valid: false, message: this.messages.number };\n      }\n\n      if (min !== null && normalizedValue < min) {\n        return { valid: false, message: `Value must be at least ${min}` };\n      }\n\n      if (max !== null && normalizedValue > max) {\n        return { valid: false, message: `Value must be no more than ${max}` };\n      }\n\n      return { valid: true };\n    });\n\n    // Date validation with flexible formats\n    this.customValidators.set(\"date\", (value, format = \"\") => {\n      if (value.length === 0) return { valid: true };\n      return {\n        valid: this.validateDate(value, format),\n        message: this.messages.date,\n      };\n    });\n\n    // File validation\n    this.customValidators.set(\"file\", (value, params = \"\") => {\n      if (!value || !value.length) return { valid: true };\n\n      const [maxSize, allowedTypes] = params.split(\",\");\n      const file = value[0];\n\n      if (maxSize && file.size > maxSize * 1024 * 1024) {\n        return { valid: false, message: this.messages.fileSize };\n      }\n\n      if (allowedTypes && !allowedTypes.split(\"|\").includes(file.type)) {\n        return { valid: false, message: this.messages.fileType };\n      }\n\n      return { valid: true };\n    });\n\n    // Flexible pattern matching with flags\n    this.customValidators.set(\"pattern\", (value, patternString) => {\n      if (value.length === 0) return { valid: true };\n      try {\n        const [pattern, flags = \"\"] = patternString.split(\"|\");\n        return {\n          valid: new RegExp(pattern, flags).test(value),\n          message: this.messages.pattern,\n        };\n      } catch (e) {\n        console.warn(\"Invalid regex pattern:\", e);\n        return { valid: true };\n      }\n    });\n  }\n\n  validateEmail(email) {\n    // Basic structure check\n    if (!/^[^@\\s]+@[^@\\s]+/.test(email)) return false;\n\n    try {\n      // Split into local and domain parts\n      const [local, domain] = email.split(\"@\");\n\n      // Local part checks\n      if (local.length > 64) return false;\n\n      // Domain checks (more permissive)\n      const domainParts = domain.split(\".\");\n      return domainParts.every((part) => part.length > 0 && part.length <= 63);\n    } catch (e) {\n      return false;\n    }\n  }\n\n  validatePhone(phone) {\n    // Remove all formatting characters\n    const stripped = phone.replace(/[\\s\\-.()\\u2000-\\u206F\\u2E00-\\u2E7F]/g, \"\");\n\n    // Allow for various international formats\n    // Minimum 5 digits (some old phone numbers)\n    // Maximum 15 digits (ITU-T recommendation)\n    // Optional + at start\n    return /^\\+?\\d{5,15}$/.test(stripped);\n  }\n\n  validateDate(value, format) {\n    if (!value) return false;\n\n    // Try parsing as ISO date first\n    let date = new Date(value);\n    if (!isNaN(date.getTime())) return true;\n\n    // If format is specified, try parsing with format\n    if (format) {\n      try {\n        // Simple format parsing (can be expanded)\n        const formatParts = format.split(/[-/]/);\n        const valueParts = value.split(/[-/]/);\n\n        if (formatParts.length !== valueParts.length) return false;\n\n        const dateObj = {};\n        formatParts.forEach((part, i) => {\n          dateObj[part.toLowerCase()] = parseInt(valueParts[i], 10);\n        });\n\n        date = new Date(\n          dateObj.yyyy || dateObj.yy + 2000,\n          (dateObj.mm || 1) - 1,\n          dateObj.dd || 1\n        );\n\n        return !isNaN(date.getTime());\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return false;\n  }\n\n  normalizeNumber(value) {\n    // Handle different number formats (1,234.56 or 1.234,56)\n    const cleaned = value.replace(/[^\\d,.-]/g, \"\");\n\n    // Detect format based on position of . and ,\n    const lastDot = cleaned.lastIndexOf(\".\");\n    const lastComma = cleaned.lastIndexOf(\",\");\n\n    if (lastDot > lastComma) {\n      // 1,234.56 format\n      return parseFloat(cleaned.replace(/,/g, \"\"));\n    } else if (lastComma > lastDot) {\n      // 1.234,56 format\n      return parseFloat(cleaned.replace(/\\./g, \"\").replace(\",\", \".\"));\n    }\n\n    return parseFloat(cleaned);\n  }\n\n  // Rest of the class implementation remains the same...\n  init() {\n    this.setupFieldValidations();\n    this.setupValidationListeners();\n  }\n\n  setupFieldValidations() {\n    const fields = this.form.querySelectorAll(\"[data-validate]\");\n\n    fields.forEach((field) => {\n      const rules = field.getAttribute(\"data-validate\").split(\" \");\n      this.validationRules.set(field, rules);\n    });\n  }\n\n  setupValidationListeners() {\n    this.form.querySelectorAll(\"input, select, textarea\").forEach((field) => {\n      if (this.validationRules.has(field)) {\n        field.addEventListener(\"blur\", () => this.validateField(field));\n        field.addEventListener(\"input\", () => {\n          this.clearError(field);\n        });\n      }\n    });\n  }\n\n  validateField(field) {\n    const rules = this.validationRules.get(field);\n    if (!rules) return true;\n\n    let isValid = true;\n    let errorMessage = \"\";\n\n    for (const ruleString of rules) {\n      let ruleName, ruleValue;\n\n      if (ruleString.includes(\":\")) {\n        [ruleName, ruleValue] = ruleString.split(\":\");\n      } else {\n        ruleName = ruleString;\n      }\n\n      const validator = this.customValidators.get(ruleName);\n      if (validator) {\n        const value = field.type === \"file\" ? field.files : field.value;\n        const result = validator(value, ruleValue);\n        if (!result.valid) {\n          isValid = false;\n          errorMessage =\n            field.getAttribute(\"data-error-message\") || result.message;\n          break;\n        }\n      }\n    }\n\n    if (!isValid) {\n      this.showError(field, errorMessage);\n    } else {\n      this.clearError(field);\n    }\n\n    return isValid;\n  }\n\n  validateStep(stepElement) {\n    const fields = stepElement.querySelectorAll(\"input, select, textarea\");\n    let isStepValid = true;\n\n    fields.forEach((field) => {\n      if (this.validationRules.has(field)) {\n        if (!this.validateField(field)) {\n          isStepValid = false;\n        }\n      }\n    });\n\n    return isStepValid;\n  }\n\n  validateAllSteps() {\n    const steps = this.form.querySelectorAll(\"[data-form-step]\");\n    let isValid = true;\n\n    steps.forEach((step) => {\n      if (!this.validateStep(step)) {\n        isValid = false;\n      }\n    });\n\n    return isValid;\n  }\n\n  showError(field, message) {\n    field.setAttribute(\"data-invalid\", \"\");\n    field.setAttribute(\"aria-invalid\", \"true\");\n\n    let errorElement = field.parentElement.querySelector(\".form-error-message\");\n    if (!errorElement) {\n      errorElement = document.createElement(\"div\");\n      errorElement.className = \"form-error-message\";\n      errorElement.setAttribute(\"role\", \"alert\");\n      field.parentElement.appendChild(errorElement);\n    }\n    errorElement.textContent = message;\n  }\n\n  clearError(field) {\n    field.removeAttribute(\"data-invalid\");\n    field.removeAttribute(\"aria-invalid\");\n    const errorElement = field.parentElement.querySelector(\n      \".form-error-message\"\n    );\n    if (errorElement) {\n      errorElement.remove();\n    }\n  }\n\n  clearAllErrors() {\n    this.form.querySelectorAll(\"[data-invalid]\").forEach((field) => {\n      this.clearError(field);\n    });\n  }\n\n  setMessages(messages) {\n    this.messages = { ...this.messages, ...messages };\n  }\n\n  setLocale(locale) {\n    this.locale = locale;\n  }\n\n  addValidator(name, validatorFn) {\n    this.customValidators.set(name, validatorFn);\n  }\n}\n\nexport default Validator;\n","// src/core/WebflowMultiStepForm.js\nimport StepManager from \"./stepManager.js\";\nimport FormMemory from \"./formMemory.js\";\nimport QueryParams from \"./QueryParams.js\";\nimport Validator from \"./validator.js\";\n\nclass WebflowMultiStepForm {\n  constructor(formElement) {\n    if (!(formElement instanceof Element)) {\n      throw new Error(\"A form element must be passed to the constructor\");\n    }\n\n    this.form = formElement;\n\n    // Initialize core modules\n    this.stepManager = new StepManager(this.form);\n    this.formMemory = new FormMemory(this.form);\n    this.queryParams = new QueryParams(this.form);\n    this.validator = new Validator(this.form);\n\n    // Initialize properties scoped to this specific form instance\n    this.steps = Array.from(this.form.querySelectorAll(\"[data-form-step]\"));\n    this.nextButtons = Array.from(\n      this.form.querySelectorAll('[data-form-navigation=\"next\"]')\n    );\n    this.prevButtons = Array.from(\n      this.form.querySelectorAll('[data-form-navigation=\"prev\"]')\n    );\n    this.currentStepIndex = 0;\n\n    this.init();\n  }\n\n  init() {\n    // Initialize validator\n    this.validator.init();\n\n    // Initialize form memory if not disabled\n    if (this.form.getAttribute(\"data-form-memory\") !== \"false\") {\n      this.formMemory.init();\n    }\n\n    // Initialize query parameters\n    this.queryParams.init();\n\n    // Set initial step states\n    this.updateStepStates();\n\n    // Add event listeners to navigation buttons\n    this.nextButtons.forEach((button) => {\n      button.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        this.nextStep();\n      });\n    });\n\n    this.prevButtons.forEach((button) => {\n      button.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        this.previousStep();\n      });\n    });\n\n    // Update navigation state\n    this.updateNavigationState();\n\n    // Prevent form submission until last step and validation passes\n    this.form.addEventListener(\"submit\", (e) => this.handleSubmit(e));\n\n    // Listen for events\n    this.setupEventListeners();\n\n    // Add keyboard navigation\n    this.setupKeyboardNavigation();\n  }\n\n  setupEventListeners() {\n    // Listen for step changes to update navigation\n    this.form.addEventListener(\"stepChange\", () =>\n      this.updateNavigationState()\n    );\n\n    // Listen for form memory restore events\n    this.form.addEventListener(\"restoreStep\", (e) => {\n      this.goToStep(e.detail.step);\n    });\n\n    // Listen for goToStep events from query params\n    this.form.addEventListener(\"goToStep\", (e) => {\n      this.goToStep(e.detail.step);\n    });\n\n    // Listen for form progress events\n    if (this.form.getAttribute(\"data-form-memory\") !== \"false\") {\n      this.form.addEventListener(\"formProgressSaved\", () => {\n        this.showSavedFeedback();\n      });\n    }\n  }\n\n  setupKeyboardNavigation() {\n    this.form.addEventListener(\"keydown\", (e) => {\n      // Only handle keyboard navigation if enabled\n      if (this.form.getAttribute(\"data-keyboard-nav\") !== \"true\") return;\n\n      if (e.key === \"Enter\" && !e.shiftKey) {\n        e.preventDefault();\n        this.nextStep();\n      } else if (e.key === \"Enter\" && e.shiftKey) {\n        e.preventDefault();\n        this.previousStep();\n      }\n    });\n  }\n\n  updateStepStates() {\n    this.steps.forEach((step, index) => {\n      // Remove all possible states first\n      step.removeAttribute(\"data-form-step-active\");\n      step.removeAttribute(\"data-form-step-completed\");\n      step.removeAttribute(\"data-form-step-upcoming\");\n\n      // Set appropriate state\n      if (index === this.currentStepIndex) {\n        step.setAttribute(\"data-form-step-active\", \"\");\n        step.style.display = \"block\";\n        // Focus first field in step\n        const firstInput = step.querySelector(\"input, select, textarea\");\n        if (firstInput) firstInput.focus();\n      } else if (index < this.currentStepIndex) {\n        step.setAttribute(\"data-form-step-completed\", \"\");\n        step.style.display = \"none\";\n      } else {\n        step.setAttribute(\"data-form-step-upcoming\", \"\");\n        step.style.display = \"none\";\n      }\n    });\n\n    // Update form state\n    this.form.setAttribute(\"data-form-step-index\", this.currentStepIndex);\n    this.form.setAttribute(\"data-form-step-count\", this.steps.length);\n\n    // Scroll to top of form\n    if (this.form.getAttribute(\"data-auto-scroll\") !== \"false\") {\n      this.form.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n    }\n  }\n\n  updateNavigationState() {\n    // Update previous buttons\n    this.prevButtons.forEach((button) => {\n      button.removeAttribute(\"data-navigation-disabled\");\n      button.removeAttribute(\"data-navigation-hidden\");\n\n      if (this.currentStepIndex === 0) {\n        button.setAttribute(\"data-navigation-disabled\", \"\");\n        button.disabled = true;\n      } else {\n        button.removeAttribute(\"data-navigation-disabled\");\n        button.disabled = false;\n      }\n    });\n\n    // Update next buttons\n    this.nextButtons.forEach((button) => {\n      button.removeAttribute(\"data-navigation-disabled\");\n      button.removeAttribute(\"data-navigation-hidden\");\n      button.removeAttribute(\"data-navigation-final\");\n\n      if (this.currentStepIndex === this.steps.length - 1) {\n        button.setAttribute(\"data-navigation-disabled\", \"\");\n        button.disabled = true;\n      } else if (this.currentStepIndex === this.steps.length - 2) {\n        button.setAttribute(\"data-navigation-final\", \"\");\n        button.disabled = false;\n      } else {\n        button.removeAttribute(\"data-navigation-disabled\");\n        button.disabled = false;\n      }\n    });\n  }\n\n  nextStep() {\n    const currentStep = this.steps[this.currentStepIndex];\n\n    // Validate current step before proceeding\n    if (this.validator.validateStep(currentStep)) {\n      if (this.currentStepIndex < this.steps.length - 1) {\n        this.currentStepIndex++;\n        this.updateStepStates();\n        this.updateNavigationState();\n\n        // Save progress if enabled\n        if (this.form.getAttribute(\"data-form-memory\") !== \"false\") {\n          this.formMemory.saveProgress();\n        }\n\n        // Dispatch step complete event\n        this.form.dispatchEvent(\n          new CustomEvent(\"stepComplete\", {\n            detail: { step: this.currentStepIndex - 1 },\n          })\n        );\n      }\n    }\n  }\n\n  previousStep() {\n    if (this.currentStepIndex > 0) {\n      this.currentStepIndex--;\n      this.updateStepStates();\n      this.updateNavigationState();\n\n      // Save progress if enabled\n      if (this.form.getAttribute(\"data-form-memory\") !== \"false\") {\n        this.formMemory.saveProgress();\n      }\n    }\n  }\n\n  goToStep(stepIndex) {\n    if (stepIndex >= 0 && stepIndex < this.steps.length) {\n      // Validate all steps before the target step\n      let canProceed = true;\n      for (let i = 0; i < stepIndex; i++) {\n        if (!this.validator.validateStep(this.steps[i])) {\n          canProceed = false;\n          this.currentStepIndex = i;\n          break;\n        }\n      }\n\n      if (canProceed) {\n        this.currentStepIndex = stepIndex;\n      }\n\n      this.updateStepStates();\n      this.updateNavigationState();\n    }\n  }\n\n  handleSubmit(event) {\n    // Validate all steps before submission\n    if (\n      this.currentStepIndex !== this.steps.length - 1 ||\n      !this.validator.validateAllSteps()\n    ) {\n      event.preventDefault();\n      alert(\"Please complete all required fields correctly before submitting.\");\n      return;\n    }\n\n    // Clear saved progress if form memory is enabled\n    if (this.form.getAttribute(\"data-form-memory\") !== \"false\") {\n      this.formMemory.clearSavedProgress();\n    }\n\n    // Dispatch form valid event\n    this.form.dispatchEvent(new CustomEvent(\"formValid\"));\n  }\n\n  resetForm() {\n    this.form.reset();\n    this.validator.clearAllErrors();\n    if (this.form.getAttribute(\"data-form-memory\") !== \"false\") {\n      this.formMemory.clearSavedProgress();\n    }\n    this.goToStep(0);\n  }\n\n  showSavedFeedback() {\n    let saveIndicator = this.form.querySelector(\".form-save-indicator\");\n    if (!saveIndicator) {\n      saveIndicator = document.createElement(\"div\");\n      saveIndicator.className = \"form-save-indicator\";\n      this.form.appendChild(saveIndicator);\n    }\n\n    saveIndicator.textContent = \"Progress saved\";\n    saveIndicator.style.opacity = \"1\";\n\n    setTimeout(() => {\n      saveIndicator.style.opacity = \"0\";\n    }, 2000);\n  }\n\n  destroy() {\n    // Cleanup form memory\n    if (this.form.getAttribute(\"data-form-memory\") !== \"false\") {\n      this.formMemory.destroy();\n    }\n\n    // Remove navigation listeners\n    this.nextButtons.forEach((button) => {\n      button.removeEventListener(\"click\", this.nextStep);\n    });\n\n    this.prevButtons.forEach((button) => {\n      button.removeEventListener(\"click\", this.previousStep);\n    });\n\n    // Remove form listeners\n    this.form.removeEventListener(\"submit\", this.handleSubmit);\n\n    // Clear any remaining error states\n    this.validator.clearAllErrors();\n  }\n}\n\nexport default WebflowMultiStepForm;\n","// // src/index.js\n// import WebflowMultiStepForm from \"./core/WebflowMultiStepForm.js\";\n\n// class MultiStepFormInitializer {\n//   static init() {\n//     // Find all forms with the multi-step attribute\n//     const forms = document.querySelectorAll(\"[data-multi-step-form]\");\n\n//     forms.forEach((form) => {\n//       // Ensure unique ID for form memory\n//       if (!form.id) {\n//         form.id = `msf-${Math.random().toString(36).substr(2, 9)}`;\n//       }\n\n//       // Initialize the form\n//       const multiStepForm = new WebflowMultiStepForm(form);\n\n//       // Store instance in form element for potential external access\n//       form._multiStepForm = multiStepForm;\n//     });\n//   }\n// }\n\n// // Auto-initialize when DOM is ready\n// if (document.readyState === \"loading\") {\n//   document.addEventListener(\"DOMContentLoaded\", () =>\n//     MultiStepFormInitializer.init()\n//   );\n// } else {\n//   MultiStepFormInitializer.init();\n// }\n\n// // Expose to global scope for manual initialization if needed\n// window.WebflowMultiStepForm = {\n//   init: MultiStepFormInitializer.init,\n//   create: (form) => new WebflowMultiStepForm(form),\n// };\n\nimport WebflowMultiStepForm from \"./WebflowMultiStepForm.js\";\n\nclass MultiStepFormInitializer {\n  static init() {\n    // Find all forms with the multi-step attribute\n    const forms = document.querySelectorAll(\"[data-multi-step-form]\");\n\n    forms.forEach((form) => {\n      // Ensure unique ID for form memory\n      if (!form.id) {\n        form.id = `msf-${Math.random().toString(36).substr(2, 9)}`;\n      }\n\n      // Initialize the form\n      const multiStepForm = new WebflowMultiStepForm(form);\n\n      // Store instance in form element for potential external access\n      form._multiStepForm = multiStepForm;\n    });\n  }\n}\n\n// Auto-initialize when DOM is ready\nif (document.readyState === \"loading\") {\n  document.addEventListener(\"DOMContentLoaded\", () =>\n    MultiStepFormInitializer.init()\n  );\n} else {\n  MultiStepFormInitializer.init();\n}\n\n// Export the class and expose global scope\nexport default MultiStepFormInitializer;\nexport { WebflowMultiStepForm };\nwindow.WebflowMultiStepForm = {\n  init: MultiStepFormInitializer.init,\n  create: (form) => new WebflowMultiStepForm(form),\n};\n"],"names":["StepManager","constructor","form","this","steps","Array","from","querySelectorAll","currentStepIndex","totalSteps","length","progressIndicators","customProgressIndicators","getCurrentStep","getCurrentStepIndex","getTotalSteps","goToStep","index","updateStepStates","updateProgressIndicators","next","previous","forEach","step","removeAttribute","setAttribute","style","display","dispatchEvent","CustomEvent","detail","currentStep","isFirstStep","hasPrevious","isLastStep","hasNext","indicator","classList","remove","add","FormMemory","formId","id","storageKey","autoSaveInterval","handleInput","bind","saveProgress","restoreProgress","init","addEventListener","setInterval","window","event","target","type","saveTimeout","clearTimeout","setTimeout","formData","field","checked","name","value","localStorage","setItem","JSON","stringify","timestamp","Date","now","data","getAttribute","error","console","warn","saved","getItem","parse","MAX_AGE","clearSavedProgress","Object","entries","parseInt","removeItem","destroy","clearInterval","removeEventListener","QueryParams","hasAttribute","prefillFromQueryParams","stepParam","getQueryParam","param","URLSearchParams","location","search","get","paramName","paramValue","toLowerCase","Event","bubbles","Validator","validationRules","Map","customValidators","locale","document","documentElement","lang","messages","required","email","phone","minLength","maxLength","pattern","number","date","fileSize","fileType","setupDefaultValidators","set","valid","String","trim","message","validateEmail","validatePhone","Number","params","min","max","split","map","p","parseFloat","normalizedValue","normalizeNumber","isNaN","format","validateDate","maxSize","allowedTypes","file","size","includes","patternString","flags","RegExp","test","e","local","domain","every","part","stripped","replace","getTime","formatParts","valueParts","dateObj","i","yyyy","yy","mm","dd","cleaned","lastDot","lastIndexOf","lastComma","setupFieldValidations","setupValidationListeners","rules","has","validateField","clearError","isValid","errorMessage","ruleString","ruleName","ruleValue","validator","result","files","showError","validateStep","stepElement","fields","isStepValid","validateAllSteps","errorElement","parentElement","querySelector","createElement","className","appendChild","textContent","clearAllErrors","setMessages","setLocale","addValidator","validatorFn","WebflowMultiStepForm","formElement","Element","Error","stepManager","formMemory","queryParams","nextButtons","prevButtons","button","preventDefault","nextStep","previousStep","updateNavigationState","handleSubmit","setupEventListeners","setupKeyboardNavigation","showSavedFeedback","key","shiftKey","firstInput","focus","scrollIntoView","behavior","block","disabled","stepIndex","canProceed","alert","resetForm","reset","saveIndicator","opacity","MultiStepFormInitializer","Math","random","toString","substr","multiStepForm","_multiStepForm","readyState","create"],"mappings":"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"}
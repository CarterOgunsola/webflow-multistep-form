{"version":3,"file":"webflow-multistep-form.esm.js","sources":["../src/core/stepManager.js","../src/core/formMemory.js","../src/core/QueryParams.js","../src/core/validator.js","../src/core/WebflowMultiStepForm.js","../src/core/index.js"],"sourcesContent":["// src/core/StepManager.js\nclass StepManager {\n  constructor(form) {\n    this.form = form;\n    this.steps = Array.from(this.form.querySelectorAll(\"[data-form-step]\"));\n    this.currentStepIndex = 0;\n    this.totalSteps = this.steps.length;\n  }\n\n  getCurrentStep() {\n    return this.steps[this.currentStepIndex];\n  }\n\n  getCurrentStepIndex() {\n    return this.currentStepIndex;\n  }\n\n  getTotalSteps() {\n    return this.totalSteps;\n  }\n\n  goToStep(index) {\n    if (index >= 0 && index < this.totalSteps) {\n      this.currentStepIndex = index;\n      this.updateStepStates();\n      return true;\n    }\n    return false;\n  }\n\n  next() {\n    return this.goToStep(this.currentStepIndex + 1);\n  }\n\n  previous() {\n    return this.goToStep(this.currentStepIndex - 1);\n  }\n\n  hasNext() {\n    return this.currentStepIndex < this.totalSteps - 1;\n  }\n\n  hasPrevious() {\n    return this.currentStepIndex > 0;\n  }\n\n  updateStepStates() {\n    this.steps.forEach((step, index) => {\n      step.removeAttribute(\"data-form-step-active\");\n      step.removeAttribute(\"data-form-step-completed\");\n      step.removeAttribute(\"data-form-step-upcoming\");\n\n      if (index === this.currentStepIndex) {\n        step.setAttribute(\"data-form-step-active\", \"\");\n        step.style.display = \"block\";\n      } else if (index < this.currentStepIndex) {\n        step.setAttribute(\"data-form-step-completed\", \"\");\n        step.style.display = \"none\";\n      } else {\n        step.setAttribute(\"data-form-step-upcoming\", \"\");\n        step.style.display = \"none\";\n      }\n    });\n\n    this.form.setAttribute(\"data-form-step-index\", this.currentStepIndex);\n    this.form.setAttribute(\"data-form-step-count\", this.totalSteps);\n\n    this.form.dispatchEvent(\n      new CustomEvent(\"stepChange\", {\n        detail: {\n          currentStep: this.currentStepIndex,\n          totalSteps: this.totalSteps,\n          isFirstStep: !this.hasPrevious(),\n          isLastStep: !this.hasNext(),\n        },\n      })\n    );\n  }\n}\n\nexport default StepManager;\n","// src/core/FormMemory.js\nclass FormMemory {\n  constructor(form) {\n    this.form = form;\n    this.formId = this.form.id;\n    this.storageKey = `wf-form-${this.formId}`;\n    this.autoSaveInterval = null;\n\n    this.handleInput = this.handleInput.bind(this);\n    this.saveProgress = this.saveProgress.bind(this);\n    this.restoreProgress = this.restoreProgress.bind(this);\n  }\n\n  init() {\n    this.form.addEventListener(\"input\", this.handleInput);\n    this.restoreProgress();\n    this.autoSaveInterval = setInterval(this.saveProgress, 30000);\n    window.addEventListener(\"beforeunload\", () => {\n      this.saveProgress();\n    });\n  }\n\n  handleInput(event) {\n    if (event.target.type === \"password\") return;\n\n    if (this.saveTimeout) clearTimeout(this.saveTimeout);\n    this.saveTimeout = setTimeout(() => this.saveProgress(), 1000);\n  }\n\n  saveProgress() {\n    const formData = {};\n    const fields = this.form.querySelectorAll(\"input, select, textarea\");\n\n    fields.forEach((field) => {\n      if (field.type === \"submit\" || field.type === \"password\") return;\n\n      switch (field.type) {\n        case \"checkbox\":\n        case \"radio\":\n          if (field.checked) {\n            formData[field.name] = field.value;\n          }\n          break;\n        case \"file\":\n          break;\n        default:\n          if (field.value) {\n            formData[field.name] = field.value;\n          }\n      }\n    });\n\n    try {\n      localStorage.setItem(\n        this.storageKey,\n        JSON.stringify({\n          timestamp: Date.now(),\n          data: formData,\n          currentStep: this.form.getAttribute(\"data-form-step-index\") || 0,\n        })\n      );\n\n      this.form.dispatchEvent(new CustomEvent(\"formProgressSaved\"));\n    } catch (error) {\n      console.warn(\"Failed to save form progress:\", error);\n    }\n  }\n\n  restoreProgress() {\n    try {\n      const saved = localStorage.getItem(this.storageKey);\n      if (!saved) return false;\n\n      const { data, timestamp, currentStep } = JSON.parse(saved);\n\n      const MAX_AGE = 24 * 60 * 60 * 1000;\n      if (Date.now() - timestamp > MAX_AGE) {\n        this.clearSavedProgress();\n        return false;\n      }\n\n      Object.entries(data).forEach(([name, value]) => {\n        const fields = this.form.querySelectorAll(`[name=\"${name}\"]`);\n        fields.forEach((field) => {\n          switch (field.type) {\n            case \"checkbox\":\n            case \"radio\":\n              field.checked = field.value === value;\n              break;\n            default:\n              field.value = value;\n          }\n        });\n      });\n\n      if (currentStep) {\n        this.form.dispatchEvent(\n          new CustomEvent(\"restoreStep\", {\n            detail: { step: parseInt(currentStep, 10) },\n          })\n        );\n      }\n\n      this.form.dispatchEvent(\n        new CustomEvent(\"formProgressRestored\", {\n          detail: { timestamp },\n        })\n      );\n\n      return true;\n    } catch (error) {\n      console.warn(\"Failed to restore form progress:\", error);\n      return false;\n    }\n  }\n\n  clearSavedProgress() {\n    try {\n      localStorage.removeItem(this.storageKey);\n      return true;\n    } catch (error) {\n      console.warn(\"Failed to clear form progress:\", error);\n      return false;\n    }\n  }\n\n  destroy() {\n    if (this.autoSaveInterval) {\n      clearInterval(this.autoSaveInterval);\n    }\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n    this.form.removeEventListener(\"input\", this.handleInput);\n  }\n}\n\nexport default FormMemory;\n","// src/core/QueryParams.js\nclass QueryParams {\n  constructor(form) {\n    this.form = form;\n  }\n\n  init() {\n    // Check for data-form-prefill attribute\n    if (this.form.hasAttribute(\"data-form-prefill\")) {\n      this.prefillFromQueryParams();\n    }\n\n    // Check for specific step in URL\n    const stepParam = this.getQueryParam(\"step\");\n    if (stepParam) {\n      this.form.dispatchEvent(\n        new CustomEvent(\"goToStep\", {\n          detail: { step: parseInt(stepParam, 10) - 1 },\n        })\n      );\n    }\n  }\n\n  getQueryParam(param) {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get(param);\n  }\n\n  prefillFromQueryParams() {\n    const fields = this.form.querySelectorAll(\"[data-param]\");\n\n    fields.forEach((field) => {\n      const paramName = field.getAttribute(\"data-param\");\n      const paramValue = this.getQueryParam(paramName);\n\n      if (paramValue) {\n        switch (field.type) {\n          case \"checkbox\":\n            field.checked = paramValue.toLowerCase() === \"true\";\n            break;\n          case \"radio\":\n            if (field.value === paramValue) {\n              field.checked = true;\n            }\n            break;\n          default:\n            field.value = paramValue;\n        }\n\n        // Dispatch change event to trigger any dependent logic\n        field.dispatchEvent(new Event(\"change\", { bubbles: true }));\n      }\n    });\n  }\n}\n\nexport default QueryParams;\n","// src/core/Validator.js\nclass Validator {\n  constructor(form) {\n    this.form = form;\n    this.validationRules = new Map();\n    this.customValidators = new Map();\n\n    // Setup default validators\n    this.setupDefaultValidators();\n  }\n\n  setupDefaultValidators() {\n    this.customValidators.set(\"required\", (value) => ({\n      valid: value.trim().length > 0,\n      message: \"This field is required\",\n    }));\n\n    this.customValidators.set(\"email\", (value) => ({\n      valid: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value),\n      message: \"Please enter a valid email address\",\n    }));\n\n    this.customValidators.set(\"phone\", (value) => ({\n      valid: /^[\\d\\s\\-+()]{7,}$/.test(value),\n      message: \"Please enter a valid phone number\",\n    }));\n\n    this.customValidators.set(\"minLength\", (value, length) => ({\n      valid: value.length >= length,\n      message: `Must be at least ${length} characters`,\n    }));\n\n    this.customValidators.set(\"maxLength\", (value, length) => ({\n      valid: value.length <= length,\n      message: `Must be no more than ${length} characters`,\n    }));\n\n    this.customValidators.set(\"pattern\", (value, pattern) => ({\n      valid: new RegExp(pattern).test(value),\n      message: \"Please match the requested format\",\n    }));\n  }\n\n  init() {\n    // Set up validation from data attributes\n    this.setupFieldValidations();\n\n    // Add real-time validation listeners\n    this.setupValidationListeners();\n  }\n\n  setupFieldValidations() {\n    const fields = this.form.querySelectorAll(\"[data-validate]\");\n\n    fields.forEach((field) => {\n      const rules = field.getAttribute(\"data-validate\").split(\" \");\n      this.validationRules.set(field, rules);\n    });\n  }\n\n  setupValidationListeners() {\n    this.form.querySelectorAll(\"input, select, textarea\").forEach((field) => {\n      if (this.validationRules.has(field)) {\n        field.addEventListener(\"blur\", () => this.validateField(field));\n        field.addEventListener(\"input\", () => {\n          // Remove error states while typing\n          this.clearError(field);\n        });\n      }\n    });\n  }\n\n  validateField(field) {\n    const rules = this.validationRules.get(field);\n    if (!rules) return true;\n\n    let isValid = true;\n    let errorMessage = \"\";\n\n    for (const ruleString of rules) {\n      let ruleName, ruleValue;\n\n      // Check if rule has a value (e.g., minLength:3)\n      if (ruleString.includes(\":\")) {\n        [ruleName, ruleValue] = ruleString.split(\":\");\n      } else {\n        ruleName = ruleString;\n      }\n\n      const validator = this.customValidators.get(ruleName);\n      if (validator) {\n        const result = validator(field.value, ruleValue);\n        if (!result.valid) {\n          isValid = false;\n          errorMessage =\n            field.getAttribute(\"data-error-message\") || result.message;\n          break;\n        }\n      }\n    }\n\n    if (!isValid) {\n      this.showError(field, errorMessage);\n    } else {\n      this.clearError(field);\n    }\n\n    return isValid;\n  }\n\n  validateStep(stepElement) {\n    const fields = stepElement.querySelectorAll(\"input, select, textarea\");\n    let isStepValid = true;\n\n    fields.forEach((field) => {\n      if (this.validationRules.has(field)) {\n        if (!this.validateField(field)) {\n          isStepValid = false;\n        }\n      }\n    });\n\n    return isStepValid;\n  }\n\n  validateAllSteps() {\n    const steps = this.form.querySelectorAll(\"[data-form-step]\");\n    let isValid = true;\n\n    steps.forEach((step) => {\n      if (!this.validateStep(step)) {\n        isValid = false;\n      }\n    });\n\n    return isValid;\n  }\n\n  showError(field, message) {\n    // Add error state to field\n    field.setAttribute(\"data-invalid\", \"\");\n\n    // Create or update error message\n    let errorElement = field.parentElement.querySelector(\".form-error-message\");\n    if (!errorElement) {\n      errorElement = document.createElement(\"div\");\n      errorElement.className = \"form-error-message\";\n      field.parentElement.appendChild(errorElement);\n    }\n    errorElement.textContent = message;\n  }\n\n  clearError(field) {\n    field.removeAttribute(\"data-invalid\");\n    const errorElement = field.parentElement.querySelector(\n      \".form-error-message\"\n    );\n    if (errorElement) {\n      errorElement.remove();\n    }\n  }\n\n  clearAllErrors() {\n    this.form.querySelectorAll(\"[data-invalid]\").forEach((field) => {\n      this.clearError(field);\n    });\n  }\n\n  // Add custom validator\n  addValidator(name, validatorFn) {\n    this.customValidators.set(name, validatorFn);\n  }\n}\n\nexport default Validator;\n","// src/core/WebflowMultiStepForm.js\nimport StepManager from \"./StepManager.js\";\nimport FormMemory from \"./FormMemory.js\";\nimport QueryParams from \"./QueryParams.js\";\nimport Validator from \"./Validator.js\";\n\nclass WebflowMultiStepForm {\n  constructor(formElement) {\n    if (!(formElement instanceof Element)) {\n      throw new Error(\"A form element must be passed to the constructor\");\n    }\n\n    this.form = formElement;\n\n    // Initialize core modules\n    this.stepManager = new StepManager(this.form);\n    this.formMemory = new FormMemory(this.form);\n    this.queryParams = new QueryParams(this.form);\n    this.validator = new Validator(this.form);\n\n    // Initialize properties scoped to this specific form instance\n    this.steps = Array.from(this.form.querySelectorAll(\"[data-form-step]\"));\n    this.nextButtons = Array.from(\n      this.form.querySelectorAll('[data-form-navigation=\"next\"]')\n    );\n    this.prevButtons = Array.from(\n      this.form.querySelectorAll('[data-form-navigation=\"prev\"]')\n    );\n    this.currentStepIndex = 0;\n\n    this.init();\n  }\n\n  init() {\n    // Initialize validator\n    this.validator.init();\n\n    // Initialize form memory if not disabled\n    if (this.form.getAttribute(\"data-form-memory\") !== \"false\") {\n      this.formMemory.init();\n    }\n\n    // Initialize query parameters\n    this.queryParams.init();\n\n    // Set initial step states\n    this.updateStepStates();\n\n    // Add event listeners to navigation buttons\n    this.nextButtons.forEach((button) => {\n      button.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        this.nextStep();\n      });\n    });\n\n    this.prevButtons.forEach((button) => {\n      button.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        this.previousStep();\n      });\n    });\n\n    // Update navigation state\n    this.updateNavigationState();\n\n    // Prevent form submission until last step and validation passes\n    this.form.addEventListener(\"submit\", (e) => this.handleSubmit(e));\n\n    // Listen for events\n    this.setupEventListeners();\n\n    // Add keyboard navigation\n    this.setupKeyboardNavigation();\n  }\n\n  setupEventListeners() {\n    // Listen for step changes to update navigation\n    this.form.addEventListener(\"stepChange\", () =>\n      this.updateNavigationState()\n    );\n\n    // Listen for form memory restore events\n    this.form.addEventListener(\"restoreStep\", (e) => {\n      this.goToStep(e.detail.step);\n    });\n\n    // Listen for goToStep events from query params\n    this.form.addEventListener(\"goToStep\", (e) => {\n      this.goToStep(e.detail.step);\n    });\n\n    // Listen for form progress events\n    if (this.form.getAttribute(\"data-form-memory\") !== \"false\") {\n      this.form.addEventListener(\"formProgressSaved\", () => {\n        this.showSavedFeedback();\n      });\n    }\n  }\n\n  setupKeyboardNavigation() {\n    this.form.addEventListener(\"keydown\", (e) => {\n      // Only handle keyboard navigation if enabled\n      if (this.form.getAttribute(\"data-keyboard-nav\") !== \"true\") return;\n\n      if (e.key === \"Enter\" && !e.shiftKey) {\n        e.preventDefault();\n        this.nextStep();\n      } else if (e.key === \"Enter\" && e.shiftKey) {\n        e.preventDefault();\n        this.previousStep();\n      }\n    });\n  }\n\n  updateStepStates() {\n    this.steps.forEach((step, index) => {\n      // Remove all possible states first\n      step.removeAttribute(\"data-form-step-active\");\n      step.removeAttribute(\"data-form-step-completed\");\n      step.removeAttribute(\"data-form-step-upcoming\");\n\n      // Set appropriate state\n      if (index === this.currentStepIndex) {\n        step.setAttribute(\"data-form-step-active\", \"\");\n        step.style.display = \"block\";\n        // Focus first field in step\n        const firstInput = step.querySelector(\"input, select, textarea\");\n        if (firstInput) firstInput.focus();\n      } else if (index < this.currentStepIndex) {\n        step.setAttribute(\"data-form-step-completed\", \"\");\n        step.style.display = \"none\";\n      } else {\n        step.setAttribute(\"data-form-step-upcoming\", \"\");\n        step.style.display = \"none\";\n      }\n    });\n\n    // Update form state\n    this.form.setAttribute(\"data-form-step-index\", this.currentStepIndex);\n    this.form.setAttribute(\"data-form-step-count\", this.steps.length);\n\n    // Scroll to top of form\n    if (this.form.getAttribute(\"data-auto-scroll\") !== \"false\") {\n      this.form.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n    }\n  }\n\n  updateNavigationState() {\n    // Update previous buttons\n    this.prevButtons.forEach((button) => {\n      button.removeAttribute(\"data-navigation-disabled\");\n      button.removeAttribute(\"data-navigation-hidden\");\n\n      if (this.currentStepIndex === 0) {\n        button.setAttribute(\"data-navigation-disabled\", \"\");\n        button.disabled = true;\n      } else {\n        button.removeAttribute(\"data-navigation-disabled\");\n        button.disabled = false;\n      }\n    });\n\n    // Update next buttons\n    this.nextButtons.forEach((button) => {\n      button.removeAttribute(\"data-navigation-disabled\");\n      button.removeAttribute(\"data-navigation-hidden\");\n      button.removeAttribute(\"data-navigation-final\");\n\n      if (this.currentStepIndex === this.steps.length - 1) {\n        button.setAttribute(\"data-navigation-disabled\", \"\");\n        button.disabled = true;\n      } else if (this.currentStepIndex === this.steps.length - 2) {\n        button.setAttribute(\"data-navigation-final\", \"\");\n        button.disabled = false;\n      } else {\n        button.removeAttribute(\"data-navigation-disabled\");\n        button.disabled = false;\n      }\n    });\n  }\n\n  nextStep() {\n    const currentStep = this.steps[this.currentStepIndex];\n\n    // Validate current step before proceeding\n    if (this.validator.validateStep(currentStep)) {\n      if (this.currentStepIndex < this.steps.length - 1) {\n        this.currentStepIndex++;\n        this.updateStepStates();\n        this.updateNavigationState();\n\n        // Save progress if enabled\n        if (this.form.getAttribute(\"data-form-memory\") !== \"false\") {\n          this.formMemory.saveProgress();\n        }\n\n        // Dispatch step complete event\n        this.form.dispatchEvent(\n          new CustomEvent(\"stepComplete\", {\n            detail: { step: this.currentStepIndex - 1 },\n          })\n        );\n      }\n    }\n  }\n\n  previousStep() {\n    if (this.currentStepIndex > 0) {\n      this.currentStepIndex--;\n      this.updateStepStates();\n      this.updateNavigationState();\n\n      // Save progress if enabled\n      if (this.form.getAttribute(\"data-form-memory\") !== \"false\") {\n        this.formMemory.saveProgress();\n      }\n    }\n  }\n\n  goToStep(stepIndex) {\n    if (stepIndex >= 0 && stepIndex < this.steps.length) {\n      // Validate all steps before the target step\n      let canProceed = true;\n      for (let i = 0; i < stepIndex; i++) {\n        if (!this.validator.validateStep(this.steps[i])) {\n          canProceed = false;\n          this.currentStepIndex = i;\n          break;\n        }\n      }\n\n      if (canProceed) {\n        this.currentStepIndex = stepIndex;\n      }\n\n      this.updateStepStates();\n      this.updateNavigationState();\n    }\n  }\n\n  handleSubmit(event) {\n    // Validate all steps before submission\n    if (\n      this.currentStepIndex !== this.steps.length - 1 ||\n      !this.validator.validateAllSteps()\n    ) {\n      event.preventDefault();\n      alert(\"Please complete all required fields correctly before submitting.\");\n      return;\n    }\n\n    // Clear saved progress if form memory is enabled\n    if (this.form.getAttribute(\"data-form-memory\") !== \"false\") {\n      this.formMemory.clearSavedProgress();\n    }\n\n    // Dispatch form valid event\n    this.form.dispatchEvent(new CustomEvent(\"formValid\"));\n  }\n\n  resetForm() {\n    this.form.reset();\n    this.validator.clearAllErrors();\n    if (this.form.getAttribute(\"data-form-memory\") !== \"false\") {\n      this.formMemory.clearSavedProgress();\n    }\n    this.goToStep(0);\n  }\n\n  showSavedFeedback() {\n    let saveIndicator = this.form.querySelector(\".form-save-indicator\");\n    if (!saveIndicator) {\n      saveIndicator = document.createElement(\"div\");\n      saveIndicator.className = \"form-save-indicator\";\n      this.form.appendChild(saveIndicator);\n    }\n\n    saveIndicator.textContent = \"Progress saved\";\n    saveIndicator.style.opacity = \"1\";\n\n    setTimeout(() => {\n      saveIndicator.style.opacity = \"0\";\n    }, 2000);\n  }\n\n  destroy() {\n    // Cleanup form memory\n    if (this.form.getAttribute(\"data-form-memory\") !== \"false\") {\n      this.formMemory.destroy();\n    }\n\n    // Remove navigation listeners\n    this.nextButtons.forEach((button) => {\n      button.removeEventListener(\"click\", this.nextStep);\n    });\n\n    this.prevButtons.forEach((button) => {\n      button.removeEventListener(\"click\", this.previousStep);\n    });\n\n    // Remove form listeners\n    this.form.removeEventListener(\"submit\", this.handleSubmit);\n\n    // Clear any remaining error states\n    this.validator.clearAllErrors();\n  }\n}\n\nexport default WebflowMultiStepForm;\n","// // src/index.js\n// import WebflowMultiStepForm from \"./core/WebflowMultiStepForm.js\";\n\n// class MultiStepFormInitializer {\n//   static init() {\n//     // Find all forms with the multi-step attribute\n//     const forms = document.querySelectorAll(\"[data-multi-step-form]\");\n\n//     forms.forEach((form) => {\n//       // Ensure unique ID for form memory\n//       if (!form.id) {\n//         form.id = `msf-${Math.random().toString(36).substr(2, 9)}`;\n//       }\n\n//       // Initialize the form\n//       const multiStepForm = new WebflowMultiStepForm(form);\n\n//       // Store instance in form element for potential external access\n//       form._multiStepForm = multiStepForm;\n//     });\n//   }\n// }\n\n// // Auto-initialize when DOM is ready\n// if (document.readyState === \"loading\") {\n//   document.addEventListener(\"DOMContentLoaded\", () =>\n//     MultiStepFormInitializer.init()\n//   );\n// } else {\n//   MultiStepFormInitializer.init();\n// }\n\n// // Expose to global scope for manual initialization if needed\n// window.WebflowMultiStepForm = {\n//   init: MultiStepFormInitializer.init,\n//   create: (form) => new WebflowMultiStepForm(form),\n// };\n\nimport WebflowMultiStepForm from \"./WebflowMultiStepForm.js\";\n\nclass MultiStepFormInitializer {\n  static init() {\n    // Find all forms with the multi-step attribute\n    const forms = document.querySelectorAll(\"[data-multi-step-form]\");\n\n    forms.forEach((form) => {\n      // Ensure unique ID for form memory\n      if (!form.id) {\n        form.id = `msf-${Math.random().toString(36).substr(2, 9)}`;\n      }\n\n      // Initialize the form\n      const multiStepForm = new WebflowMultiStepForm(form);\n\n      // Store instance in form element for potential external access\n      form._multiStepForm = multiStepForm;\n    });\n  }\n}\n\n// Auto-initialize when DOM is ready\nif (document.readyState === \"loading\") {\n  document.addEventListener(\"DOMContentLoaded\", () =>\n    MultiStepFormInitializer.init()\n  );\n} else {\n  MultiStepFormInitializer.init();\n}\n\n// Export the class and expose global scope\nexport default MultiStepFormInitializer;\nexport { WebflowMultiStepForm };\nwindow.WebflowMultiStepForm = {\n  init: MultiStepFormInitializer.init,\n  create: (form) => new WebflowMultiStepForm(form),\n};\n"],"names":[],"mappings":"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"}